{
  "stats": {
    "suites": 12,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-10T21:11:30.120Z",
    "end": "2023-11-10T21:11:49.241Z",
    "duration": 19121,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cdfbdfff-19c3-4b89-8888-f9597f257fe4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "adc25a9d-5394-4516-b5aa-64079016b38e",
          "title": "todolist",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoList.js",
          "file": "\\test\\toDoList.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a tarefa com sucesso",
              "fullTitle": "todolist Adicionou a tarefa com sucesso",
              "timedOut": null,
              "duration": 3733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Aprender Selenium\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Aprender Selenium\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "e43eccbf-6454-4446-aac1-6d9ca323366d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e43eccbf-6454-4446-aac1-6d9ca323366d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3733,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "438907a1-6166-4e27-8ea3-ef110217fe6c",
          "title": "todolist",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoList10Itens.js",
          "file": "\\test\\toDoList10Itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a tarefa com sucesso",
              "fullTitle": "todolist Adicionou a tarefa com sucesso",
              "timedOut": null,
              "duration": 5177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Cypress\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"JavaScrypt\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Java\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"HTML5\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"CSS3\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Git e GitHub\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Jira\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium com Java\", Key.RETURN);\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"API\", Key.RETURN);\n/*Assertion - Verificar se adicionou as tarefas requisitadas;*/\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {return value});\nlet cypressText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[7]/span\")).getText().then(function (value) {return value});\nlet javascryptText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[8]/span\")).getText().then(function (value) {return value});\nlet javaText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[9]/span\")).getText().then(function (value) {return value});\nlet htmlText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[10]/span\")).getText().then(function (value) {return value});\nlet cssText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[11]/span\")).getText().then(function (value) {return value});\nlet gitText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[12]/span\")).getText().then(function (value) {return value});\nlet jiraText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[13]/span\")).getText().then(function (value) {return value});\nlet seleniumjavaText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[14]/span\")).getText().then(function (value) {return value});\nlet apiText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[15]/span\")).getText().then(function (value) {return value});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Selenium\")\ncypressText.should.equal(\"Cypress\")\njavascryptText.should.equal(\"JavaScrypt\")\njavaText.should.equal(\"Java\")\nhtmlText.should.equal(\"HTML5\")\ncssText.should.equal(\"CSS3\")\ngitText.should.equal(\"Git e GitHub\")\njiraText.should.equal(\"Jira\")\nseleniumjavaText.should.equal(\"Selenium com Java\")\napiText.should.equal(\"API\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "d247d8ca-5210-4d48-a35a-cfebe04575dd",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d247d8ca-5210-4d48-a35a-cfebe04575dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5177,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "f0d371f8-0ee5-4e21-972c-af8e0bb79ea5",
          "title": "Selenium",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou Selenium com sucesso",
              "fullTitle": "Selenium Adicionou Selenium com sucesso",
              "timedOut": null,
              "duration": 3657,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Selenium\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "b4783cf9-6c9d-4803-9216-99bc7ef41448",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4783cf9-6c9d-4803-9216-99bc7ef41448"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3657,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "bede4a70-eecb-4804-8f59-16e0e21aece0",
          "title": "Cypress",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou Cypress com sucesso",
              "fullTitle": "Cypress Adicionou Cypress com sucesso",
              "timedOut": null,
              "duration": 2331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Cypress\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet cypressText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\ncypressText.should.equal(\"Cypress\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "88270c06-ca26-4211-ad7d-4abcd9baec2f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88270c06-ca26-4211-ad7d-4abcd9baec2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2331,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "ef27206a-0bcf-4da0-97ab-f91185ca3f2b",
          "title": "JavaScrypt",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou JavaScrypt com sucesso",
              "fullTitle": "JavaScrypt Adicionou JavaScrypt com sucesso",
              "timedOut": null,
              "duration": 1618,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"JavaScrypt\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet javascryptText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\njavascryptText.should.equal(\"JavaScrypt\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "41814938-ecbe-4afd-b837-a56ac09a8608",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41814938-ecbe-4afd-b837-a56ac09a8608"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1618,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "594a9e1a-d429-4f40-b9f9-06e8d90db7ca",
          "title": "Java",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou Java com sucesso",
              "fullTitle": "Java Adicionou Java com sucesso",
              "timedOut": null,
              "duration": 1622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Java\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet JavaText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nJavaText.should.equal(\"Java\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "e5df103a-c2a9-436e-b6ab-46a312f9fab7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5df103a-c2a9-436e-b6ab-46a312f9fab7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1622,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "3dd1dcb2-3d03-4c27-a757-e84b1d086dbd",
          "title": "HTML5",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou HTML5 com sucesso",
              "fullTitle": "HTML5 Adicionou HTML5 com sucesso",
              "timedOut": null,
              "duration": 1554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\" HTML5\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet HTML5Text = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nHTML5Text.should.equal(\"HTML5\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "106ecb73-b83b-4cce-9fdb-e46b5e4c090a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "106ecb73-b83b-4cce-9fdb-e46b5e4c090a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1554,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "29efe915-f710-451f-8740-4149c4d42df0",
          "title": "CSS3",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou CSS3 com sucesso",
              "fullTitle": "CSS3 Adicionou CSS3 com sucesso",
              "timedOut": null,
              "duration": 1519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"CSS3\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet CSS3Text = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nCSS3Text.should.equal(\"CSS3\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "ae57099a-c5a8-4ce7-a560-a20d113e7e2a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae57099a-c5a8-4ce7-a560-a20d113e7e2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1519,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "eb0e39d3-2cf7-4b00-98fd-efe43f286258",
          "title": "Git e GitHub",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou Git e GitHub com sucesso",
              "fullTitle": "Git e GitHub Adicionou Git e GitHub com sucesso",
              "timedOut": null,
              "duration": 1534,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Git e GitHub\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet gitText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\ngitText.should.equal(\"Git e GitHub\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "4da74560-66c7-4288-b091-89b3e1920254",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4da74560-66c7-4288-b091-89b3e1920254"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1534,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "fad93db2-a30d-4f52-8199-96e39cd62627",
          "title": "Jira",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou Jira com sucesso",
              "fullTitle": "Jira Adicionou Jira com sucesso",
              "timedOut": null,
              "duration": 1474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Jira\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet JiraText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nJiraText.should.equal(\"Jira\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "cf6381f9-8946-4fc8-b070-778c18bcf135",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf6381f9-8946-4fc8-b070-778c18bcf135"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1474,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "a0a36b07-4f85-4475-a5b4-890e0b3563a2",
          "title": "Selenium com Java",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou Selenium com Java com sucesso",
              "fullTitle": "Selenium com Java Adicionou Selenium com Java com sucesso",
              "timedOut": null,
              "duration": 1520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium com Java\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumjavaText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumjavaText.should.equal(\"Selenium com Java\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "187c966b-2d75-481d-b802-104bd956ddc6",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "187c966b-2d75-481d-b802-104bd956ddc6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1520,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "273e30a0-46bb-418e-b326-3b8c2126adf8",
          "title": "API",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\toDoListItens.js",
          "file": "\\test\\toDoListItens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou API com sucesso",
              "fullTitle": "API Adicionou API com sucesso",
              "timedOut": null,
              "duration": 1537,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"API\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet apiText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\napiText.should.equal(\"API\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "d0c33e6e-c379-4aea-b70f-4a846f010762",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0c33e6e-c379-4aea-b70f-4a846f010762"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1537,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}