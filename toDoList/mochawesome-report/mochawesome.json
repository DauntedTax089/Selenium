{
  "stats": {
    "suites": 11,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-10T20:59:00.944Z",
    "end": "2023-11-10T20:59:21.002Z",
    "duration": 20058,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4d31daae-a581-4155-9e14-84f00e8ed579",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e9d75629-bb09-4fdb-ac30-dcd721b60103",
          "title": "todolist",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist.js",
          "file": "\\test\\todolist.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a tarefa com sucesso",
              "fullTitle": "todolist Adicionou a tarefa com sucesso",
              "timedOut": null,
              "duration": 2846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Aprender Selenium\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Aprender Selenium\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "06c4cf26-6485-40eb-a837-33d2b19281d2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06c4cf26-6485-40eb-a837-33d2b19281d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2846,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "1f132de2-334f-4aeb-9392-ccd1cb3c40e3",
          "title": "Selenium",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "Selenium Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 2816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Selenium\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "77a4c8c1-c2c5-405c-8461-a5a093ee9e65",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77a4c8c1-c2c5-405c-8461-a5a093ee9e65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2816,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "db3fbc73-e48f-4e42-a0d6-c32839e5c80e",
          "title": "Cypress",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a segunda tarefa com sucesso",
              "fullTitle": "Cypress Adicionou a segunda tarefa com sucesso",
              "timedOut": null,
              "duration": 2073,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Cypress\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Cypress\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "1f8276d0-6e84-449f-a8c6-010b61c378f9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f8276d0-6e84-449f-a8c6-010b61c378f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2073,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "c106f811-8835-499e-9e9a-ef9c3a0369b5",
          "title": "JavaScrypt",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "JavaScrypt Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 1853,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"JavaScrypt\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"JavaScrypt\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "8f06c123-6f34-4c7e-910f-d93b43abbfa5",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f06c123-6f34-4c7e-910f-d93b43abbfa5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1853,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "47d60ae8-d3e0-4ad2-876c-24621c44c60c",
          "title": "Java",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "Java Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 1874,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Java\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Java\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "62385dd2-dbb4-4f8d-9a4f-86fb8e93c1bd",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62385dd2-dbb4-4f8d-9a4f-86fb8e93c1bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1874,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "1b32e087-61c6-4920-ae9c-a3e9ee9a7f2c",
          "title": "HTML5",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "HTML5 Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 1876,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\" HTML5\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"HTML5\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "09e2bbae-cd5c-48e8-a5d4-88460c87759f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09e2bbae-cd5c-48e8-a5d4-88460c87759f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1876,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "de9385ba-3be5-423e-b53f-19d0cf84fd63",
          "title": "CSS3",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "CSS3 Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 1652,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"CSS3\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"CSS3\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "0afc3a44-cbb9-4dd2-873f-fe1a0c1bf034",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0afc3a44-cbb9-4dd2-873f-fe1a0c1bf034"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1652,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "30950ae7-e0d2-412e-83e0-2d31e4cd695f",
          "title": "Git e GitHub",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "Git e GitHub Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 2167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Git e GitHub\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Git e GitHub\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "4cc83621-8922-45c7-b270-4e970d394b20",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cc83621-8922-45c7-b270-4e970d394b20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2167,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "30bf0374-d4f1-4c91-86af-9891322a9062",
          "title": "Jira",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "Jira Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 1820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Jira\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Jira\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "1f0ca45d-9e49-4db0-9cb7-836416d411df",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f0ca45d-9e49-4db0-9cb7-836416d411df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1820,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "d358b4ee-e632-4df7-b8a6-01152bb09cd8",
          "title": "Selenium com Java",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "Selenium com Java Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 1791,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium com Java\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"Selenium com Java\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "2b643263-49ed-47d7-8c97-7df37ab7fe55",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b643263-49ed-47d7-8c97-7df37ab7fe55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1791,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "b4108b1b-dbe9-4c91-a149-1d9207911f08",
          "title": "API",
          "fullFile": "D:\\Calisto\\Analista de QA\\Portfólio\\SeleniumWithJavaScrypt\\toDoList\\test\\todolist10itens.js",
          "file": "\\test\\todolist10itens.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adicionou a primeira tarefa com sucesso",
              "fullTitle": "API Adicionou a primeira tarefa com sucesso",
              "timedOut": null,
              "duration": 1571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Abrir o navegador;\nlet driver = await new Builder().forBrowser(\"chrome\").build(); //Pedir para o código construir um driver do navegador escolhido;\n//Navegar até o site;\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//Adicionar uma tarefa;\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"API\", Key.RETURN);\n//Assertion - Verificar se adicionou a tarefa requisitada;\nlet seleniumText = await driver.findElement(By.xpath(\"/html/body/div/div/div/ul/li[6]/span\")).getText().then(function (value) {\n    return value\n});\n//Assertion Chai Should - Verificar se adicionou a tarefa requisitada;\nseleniumText.should.equal(\"API\")\n//Fechar o navegador\nawait driver.close();",
              "err": {},
              "uuid": "ecefa2a2-4ff1-4687-9630-a7fc8b606cfc",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecefa2a2-4ff1-4687-9630-a7fc8b606cfc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1571,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}